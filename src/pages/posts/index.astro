---
import { getCollection } from "astro:content";
import Navigation from "../../components/Navigation.astro";
import Layout from "../../layouts/Layout.astro";
const techPosts = await getCollection("technical");
const personalPosts = await getCollection("personal");
---

<Layout title={"Blog"}>
  <Navigation activeNavItem="blog" />

  <div class="min-h-screen bg-primaryDark px-4 lg:px-16 py-20">
    <header class="mb-16 text-center">
      <h1 class="text-4xl lg:text-6xl font-lobster text-lightGreen mb-4">
        My Writings
      </h1>
      <p class="text-teaGreen/80 font-kodeMono max-w-2xl mx-auto">
        A collection of thoughts, tutorials, and random musings â€” some
        technical, some personal.
      </p>
    </header>

    <section id="technical" class="mb-24">
      <div class="flex items-center mb-8">
        <div class="h-px flex-grow bg-teaGreen/20"></div>
        <h2 class="text-2xl font-kodeMono text-teaGreen px-4">Technical</h2>
        <div class="h-px flex-grow bg-teaGreen/20"></div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          techPosts.map((post) => (
            <a
              href={`/posts/tech/${post.slug}`}
              class="group bg-primaryGreenDark/30 backdrop-blur-sm border border-teaGreen/10 rounded-xl p-6 hover:border-teaGreen/30 transition-all duration-300 flex flex-col h-full"
            >
              <div class="flex justify-between items-start mb-4">
                <div class="flex flex-wrap gap-2">
                  {post.data.tags?.map((tag: string) => (
                    <span class="bg-teaGreen/20 text-teaGreen rounded-full px-3 py-1 text-xs font-kodeMono">
                      #{tag}
                    </span>
                  ))}
                </div>
                <span class="text-lightGreen/60 text-sm font-kodeMono">
                  {post.data.date}
                </span>
              </div>

              <h3 class="text-xl font-bold text-lightGreen mb-3 group-hover:text-teaGreen transition-colors duration-300">
                {post.data.title}
              </h3>

              <p class="text-lightGreen/80 text-sm mb-4 flex-grow">
                {post.data.description}
              </p>

              <div class="mt-auto">
                <span class="inline-flex items-center text-teaGreen font-kodeMono text-sm group-hover:translate-x-1 transition-transform duration-300">
                  Read article
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-4 w-4 ml-1"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M14 5l7 7m0 0l-7 7m7-7H3"
                    />
                  </svg>
                </span>
              </div>
            </a>
          ))
        }
      </div>
    </section>

    <section id="personal">
      <div class="flex items-center mb-8">
        <div class="h-px flex-grow bg-lightGreen/20"></div>
        <h2 class="text-2xl font-kodeMono text-lightGreen px-4">Personal</h2>
        <div class="h-px flex-grow bg-lightGreen/20"></div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          personalPosts.map((post) => (
            <a
              href={`/posts/personal/${post.slug}`}
              class="group bg-primaryDark/50 backdrop-blur-sm border border-lightGreen/10 rounded-xl p-6 hover:border-lightGreen/30 transition-all duration-300 flex flex-col h-full"
            >
              <div class="flex justify-between items-start mb-4">
                <div class="flex flex-wrap gap-2">
                  {post.data.tags?.map((tag: string) => (
                    <span class="bg-lightGreen/20 text-lightGreen rounded-full px-3 py-1 text-xs font-kodeMono">
                      #{tag}
                    </span>
                  ))}
                </div>
                <span class="text-teaGreen/60 text-sm font-kodeMono">
                  {post.data.date}
                </span>
              </div>

              <h3 class="text-xl font-bold text-teaGreen mb-3 group-hover:text-lightGreen transition-colors duration-300">
                {post.data.title}
              </h3>

              <p class="text-teaGreen/80 text-sm mb-4 flex-grow">
                {post.data.description}
              </p>

              <div class="mt-auto">
                <span class="inline-flex items-center text-lightGreen font-kodeMono text-sm group-hover:translate-x-1 transition-transform duration-300">
                  Read article
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-4 w-4 ml-1"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M14 5l7 7m0 0l-7 7m7-7H3"
                    />
                  </svg>
                </span>
              </div>
            </a>
          ))
        }
      </div>
    </section>
  </div>
</Layout>

<style>
  /* Add a subtle hover effect to cards */
  a.group {
    position: relative;
    overflow: hidden;
    transform: translateY(0);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  a.group:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  a.group::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      45deg,
      rgba(174, 247, 142, 0.1) 0%,
      rgba(0, 0, 0, 0) 70%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 0;
    pointer-events: none;
  }

  a.group:hover::before {
    opacity: 1;
  }

  /* Ensure content is above the gradient */
  a.group > * {
    position: relative;
    z-index: 1;
  }
</style>
